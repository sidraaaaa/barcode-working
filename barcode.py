# -*- coding: utf-8 -*-
"""barcode width generator
 
Automatically generated by Colaboratory.
 
Original file is located at
    https://colab.research.google.com/drive/1LHLP_Pp2mLZVn9GukVr-4emBA75c5i1e
"""
 
!pip install python-barcode
 
import tensorflow.keras.preprocessing.image as image
from PIL import Image
import numpy as np
import barcode
import cv2
import regex
 
"""### Generating Barcode"""
 
import barcode
from barcode.writer import ImageWriter
 
def barcodeworking(imag):
  """### Croping image"""
 
  imag = Image.open('barcode.png')
  w, h = imag.size
  #left,top,right,bottom
  region = imag.crop((0, 20, w, h-150))
  region.save("regions.png")
 
  """### Image Processing"""
 
  img=image.load_img("regions.png",color_mode="grayscale")
  img=image.img_to_array(img)
  img=(img>=200).astype("float")
  img=img.sum(axis=0)
  img=(img>0).astype("float")
  img = np.squeeze(img)
  img=np.array(img, dtype=int)
  print(img)
 
  """### reading occurence of 0 and 1"""
 
  st="".join(str(v) for v in img)
  all_matches=[]
  for x in regex.finditer("0+",st):
    all_matches.append((0,x.start(),x.end()-x.start()))
  for x in regex.finditer("1+",st):
    all_matches.append((1,x.start(),x.end()-x.start()))
  #printing all matches
  print(all_matches)
  #sorting them by index
  bars=sorted(all_matches,key=(lambda x:x[1]))
  bars=[(x[0],x[2]) for x in bars]
  print(bars)
  
  bars.pop(0)
  bars.pop()
 
  mn=min([x[1] for x in bars])
  bars=[(x[0], int(x[1]/mn)) for x in bars]
  bars=[("white",x[1]) if x[0]==1 else ("black",x[1]) for x in bars]
  print(bars)
  
while True:
  inp=input('Select the number of your barcode choice/n1-EAN-8/n2-CODE 128/n3-CODE 39')
  if inp=='1' or inp=='EAN-8' or inp=='ean-8' or inp=='ean':
    print("EAN-8 is working\n")
    code=input("Enter code of your barcode:")
    EAN = barcode.get_barcode_class('ean8')
    ean = EAN(code, writer=ImageWriter())
    #ean = EAN(u'65833254', writer=ImageWriter())
    imag = ean.save('barcode')
    barcodeworking(imag)
 
 
  elif inp=='2' or inp=='CODE 128' or inp=='code 128' or inp=='c128' or inp=='C128':
    print("CODE 128 is working\n")
    code=input("Enter code of your barcode:")
    C128 = barcode.get_barcode_class('code128')
    c128 = C128(code, writer=ImageWriter())
    imag = c128.save('barcode')
    barcodeworking(imag)
 
 
  elif inp=='3' or inp=='CODE 39' or inp=='code 39' or inp=='code39' or inp=='c39' or inp=='C39':
      print("CODE 39 is working")
      C39 = barcode.get_barcode_class('code39')
      code=input("Enter code for barcode")
      c39 = C39(code, writer=ImageWriter())
      imag = c39.save('barcode')
      barcodeworking(imag)
  elif inp=='0':
    break
  else:
    print("Select the correct number from options")
